{"version":3,"sources":["components/EducationForm.js","components/ExperienceForm.js","components/Form.js","components/display/Education.js","components/display/Experience.js","components/display/Display.js","App.js","reportWebVitals.js","index.js"],"names":["EducationForm","props","thisEd","index","updateEd","changeEd","onSubmit","e","htmlFor","onChange","type","id","value","institution","year","placeholder","rows","details","ExperienceForm","thisXP","updateXP","changeXP","Form","click","change","education","addEd","experience","addXP","map","edu","onClick","XP","Education","className","school","Experience","Display","state","name","address","email","App","onSubmitContact","preventDefault","setState","target","eduCopy","slice","desc","uniqId","xpCopy","handleEdChange","field","handleXPChange","handleChange","curEd","push","curXP","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6f9737f.chunk.js","sourcesContent":["const EducationForm = (props) => {\n    const { thisEd, index, updateEd, changeEd } = props;\n\n    return (\n        <div>\n            <form onSubmit={(e) => updateEd(e, index)}>\n                <label htmlFor=\"nameInput\">Institution:</label>\n                <input\n                    onChange={(e) => changeEd(e, index)}\n                    type=\"text\"\n                    id=\"institution\"\n                    value={thisEd.institution}\n                />\n                <br />\n                <label htmlFor=\"address\">Date:</label>\n                <input\n                    onChange={(e) => changeEd(e, index)}\n                    type=\"text\"\n                    id=\"year\"\n                    value={thisEd.year}\n                />\n                <br />\n\n                <textarea\n                    placeholder=\"Description\"\n                    rows=\"5\"\n                    onChange={(e) => changeEd(e, index)}\n                    type=\"text\"\n                    id=\"details\"\n                    value={thisEd.details}\n                />\n                <br />\n                {/* Use props.index - create a function that updates education[index] */}\n\n                <br />\n            </form>\n        </div>\n    );\n};\n\nexport default EducationForm;\n","const ExperienceForm = (props) => {\n\n        const { thisXP, index, updateXP, changeXP } = props;\n\n        return (\n            <div>\n                <form onSubmit={(e) => updateXP(e, index)}>\n                    <label htmlFor=\"nameInput\">Institution:</label>\n                    <input\n                        onChange={(e) => changeXP(e, index)}\n                        type=\"text\"\n                        id=\"institution\"\n                        value={thisXP.institution}\n                    />\n                    <br />\n                    <label htmlFor=\"address\">Date:</label>\n                    <input\n                        onChange={(e) => changeXP(e, index)}\n                        type=\"text\"\n                        id=\"year\"\n                        value={thisXP.year}\n                    />\n                    <br />\n\n                    <textarea\n                     placeholder=\"Description\" \n                        rows=\"5\"\n                        onChange={(e) => changeXP(e, index)}\n                        type=\"text\"\n                        id=\"details\"\n                        value={thisXP.details}\n                    />\n                    <br />\n                    {/* Use props.index - create a function that updates education[index] */}\n\n                    <br />\n                </form>\n            </div>\n        );\n    }\n\n\nexport default ExperienceForm;\n","import EducationForm from \"./EducationForm\";\nimport ExperienceForm from \"./ExperienceForm\";\n\nconst Form = (props) => {\n    const {\n        click,\n        updateEd,\n        change,\n        education,\n        changeEd,\n        addEd,\n        experience,\n        changeXP,\n        updateXP,\n        addXP,\n    } = props;\n    return (\n        <div>\n            <h2>Contact information</h2>\n            <form onSubmit={click}>\n                <label htmlFor=\"name\">Name:</label>\n                <input onChange={change} type=\"text\" id=\"name\" />\n                <br />\n                <label htmlFor=\"address\">City:</label>\n                <input onChange={change} type=\"text\" id=\"address\" />\n                <br />\n                <label htmlFor=\"email\">Email:</label>\n                <input onChange={change} type=\"text\" id=\"email\" />\n            </form>\n            <h2>Education</h2>\n            {/* iterate through number of educations to determine forms and input - Uniqid???    */}\n            {education.map((edu, index) => {\n                return (\n                    <EducationForm\n                        key={edu.id}\n                        changeEd={changeEd}\n                        thisEd={education[index]}\n                        index={index}\n                        updateEd={updateEd}\n                    />\n                );\n            })}\n\n            {/* USE THIS TO PUT THE CORRECT EDUCATION AS THE FORM VALUE */}\n\n            <button onClick={addEd}>Add Another Institution</button>\n            <h2>Experience</h2>\n            {experience.map((XP, index) => {\n                return (\n                    <ExperienceForm\n                        key={XP.id}\n                        changeXP={changeXP}\n                        thisXP={experience[index]}\n                        index={index}\n                        updateXP={updateXP}\n                    />\n                );\n            })}\n\n            {/* USE THIS TO PUT THE CORRECT EDUCATION AS THE FORM VALUE */}\n\n            <button onClick={addXP}>Add Another Institution</button>\n        </div>\n    );\n};\n\nexport default Form;\n","const Education = (props) => {\n    return (\n        <div>\n            <div className=\"institution\">\n                <div className=\"edex-title\">\n                    <h3>{props.school.institution}</h3>\n                    <p>{props.school.year}</p>\n                </div>\n\n                <p>{props.school.details}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Education;\n","import React from \"react\";\n\nconst Experience = (props) => {\n    //const { tasks } = props;\n\n    return (\n        <div>\n            <div className=\"institution\">\n                <div className=\"edex-title\">\n                    <h3>{props.experience.institution}</h3>\n                    <p>{props.experience.year}</p>\n                </div>\n\n                <p>{props.experience.details}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\nimport \"./Display.css\";\n\nconst Display = (props) => {\n    const { state } = props;\n\n    return (\n        <div>\n            <div className=\"contact-display\">\n                <h1>{state.name}</h1>\n                <div>\n                    <p>{state.address}</p>\n                    <p>{state.email}</p>\n                </div>\n            </div>\n            <hr />\n            <div className=\"edex-display\">\n                <h2>Education</h2>\n                {state.education.map((edu) => {\n                    return <Education key={edu.id} school={edu} />\n                })}\n\n            </div>\n            <hr />\n            <div className=\"edex-display\">\n                <h2>Experience</h2>\n\n                {state.experience.map((edu) => {\n                    return <Experience key={edu.id}experience={edu} />\n                })}\n\n            </div>\n        </div>\n    );\n};\n\nexport default Display;\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form.js\";\nimport Display from \"./components/display/Display\";\nimport uniqId from \"uniqid\"\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            name: \"\",\n            address: \"\",\n            email: \"\",\n            education: [],\n            experience:[],\n        };\n    }\n\n    onSubmitContact = (e) => {\n        e.preventDefault();\n        this.setState({\n            name: e.target.name.value,\n            address: e.target.address.value,\n            email: e.target.email.value,\n        });\n    };\n\n    updateEd = (e, index) => {\n        e.preventDefault();\n\n        const eduCopy = this.state.education.slice();\n        eduCopy[index] = {\n            institution: e.target.institution.value,\n            year: e.target.year.value,\n            details: e.target.desc.value,\n            id: uniqId(),\n        };\n        this.setState({\n            education: eduCopy,\n        });\n    };\n    updateXP = (e, index) => {\n      e.preventDefault();\n      const xpCopy = this.state.experience.slice();\n      xpCopy[index] = {\n          institution: e.target.institution.value,\n          year: e.target.year.value,\n          details: e.target.desc.value,\n          id: uniqId(),\n      };\n      this.setState({\n          experience: xpCopy,\n      });\n      \n  };\n\n    handleEdChange = (e, index) => {\n        let field = e.target.id;\n        const eduCopy = this.state.education.slice();\n        eduCopy[index][field] = e.target.value;\n\n        this.setState({\n            education: eduCopy,\n        });\n    };\n    handleXPChange = (e, index) => {\n      let field = e.target.id;\n      const xpCopy = this.state.experience.slice();\n      xpCopy[index][field] = e.target.value;\n\n      this.setState({\n          experience: xpCopy,\n      });\n  };\n\n    handleChange = (e) => {\n        let field = e.target.id;\n        this.setState({\n            [field]: e.target.value,\n        });\n    };\n    addEd = () => {\n        let curEd = this.state.education.slice()\n        curEd.push({\n            institution: \"\",\n            year: \"\",\n            details: \"\",\n            id: uniqId(),\n        });\n        \n        this.setState({ education: curEd });\n    };\n    addXP = () => {\n      let curXP = this.state.experience.slice()\n      curXP.push({\n          institution: \"\",\n          year: \"\",\n          details: \"\",\n          id: uniqId(),\n      });\n\n      this.setState({ experience: curXP });\n  };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"form\">\n                    <h1>Resume Builder</h1>\n                    <Form\n                        change={this.handleChange}\n                        click={this.onSubmit}\n                        education={this.state.education}\n                        changeEd={this.handleEdChange}\n                        updateEd={this.updateEd}\n                        addEd = {this.addEd}\n                        experience={this.state.experience}\n                        changeXP={this.handleXPChange}\n                        updateXP={this.updateXP}\n                        addXP={this.addXP}\n                    />\n                </div>\n                <div className=\"display\">\n                    <Display state={this.state} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}